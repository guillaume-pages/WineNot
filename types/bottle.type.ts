// types.ts

export interface Bottle {
  id?: string;
  bottle_name: string;
  millesime: number;
  type_of_wine: string;
  size: string;
  grape_varieties?: string[];
  region: string;
  eye_description?: string;
  nose_description?: string[];
  mouth_description?: number[];
  carafage?: number;
  temperature?: number;
  degree?: number;
  accompaniment?: string[];
  media?: string;
  price?: number;
  price_visibility?: number;
  global_description?: string;
  entry_date: Date;
  potential_date?: Date;
  quantity: number;
  global_visibility: number;
  cellar_id: string;
}

export interface BottleContextType {
  bottleName: string;
  setBottleName: (value: string) => void;
  bottleMillesime: number;
  setBottleMillesime: (value: number) => void;
  wineType: string;
  setWineType: (value: string) => void;
  bottleSize: string;
  setBottleSize: (value: string) => void;
  bottleDegree: number;
  setBottleDegree: (value: number) => void;
  grapeVarieties: string[];
  setGrapeVarieties: (value: string[]) => void;
  bottleRegion: string;
  setBottleRegion: (value: string) => void;
  bottleEyeDescription: string;
  setBottleEyeDescription: (value: string) => void;
  bottleNoseDescription: string[];
  setBottleNoseDescription: (value: string[]) => void;
  sliderPower: number[];
  setSliderPower: (value: number[]) => void;
  sliderComplexity: number[];
  setSliderComplexity: (value: number[]) => void;
  sliderSpicy: number[];
  setSliderSpicy: (value: number[]) => void;
  sliderFruit: number[];
  setSliderFruit: (value: number[]) => void;
  sliderWood: number[];
  setSliderWood: (value: number[]) => void;
  sliderTanin: number[];
  setSliderTanin: (value: number[]) => void;
  carafage: number;
  setCarafage: (value: number) => void;
  temperature: number;
  setTemperature: (value: number) => void;
  accompaniments: string[];
  setAccompaniment: (value: string[]) => void;
  bottlePrice: number | undefined;
  setBottlePrice: (value: number | undefined) => void;
  visibilityPrice: number;
  setVisibilityPrice: (value: number) => void;
  bottleGlobalDescription: string;
  setBottleGlobalDescription: (value: string) => void;
  bottleEntryDate: Date;
  setBottleEntryDate: (value: Date) => void;
  bottlePotentialDate: Date;
  setBottlePotentialDate: (value: Date) => void;
  bottleQuantity: number;
  setBottleQuantity: (value: number) => void;
  globalVisibility: number;
  setGlobalVisibility: (value: number) => void;
  bottleMedia: string;
  setBottleMedia: (value: string) => void;
  bottleData: Bottle;
  resetBottleData: () => void;
}
